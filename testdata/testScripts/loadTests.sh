
# api config update POST call for doing 50 api calls with 8 parallel processes
seq 1 2 | xargs -n1 -P8 curl -X POST -i http://localhost:8080/mockConfig --data '{ "url": "/api/p/wallet/debit30999", "method": "POST", "responseDelayInSeconds": 109, "requestMockValues": { "requestHeadersMockValues": { "Content-Type": ["application/json","text/html","application/pdf"], "Authorization": "$Auth", "X-DeviceId": "$DeviceId", "X-ClientId": "$ClientId", "X-Checksum": "hfsdhfbudgwq8gdqwudqu" }, "requestBodyMockValues": { "action": "debit", "module": "wallet", "txnDetails": { "orderId": "$orderId", "amount": "$amt", "txnTypes":[1,2,3,4] } } }, "responseMockValues": { "httpCode": 200, "responseHeaders": { "X-DeviceId": "requestHeaders.X-DeviceId", "X-ClientId": "requestHeaders.X-ClientId", "Content-Type": "requestHeaders.Content-Type[0]", "AllContent-Types": "requestHeaders.Content-Type", "ConsideredContent-Types": ["requestHeaders.Content-Type[0]","requestHeaders.Content-Type[1]"], "SelectedContent-Type": "requestHeaders.Content-Type[0]", "DummyContent-Type": ["requestHeaders.Content-Type[0]","DummyContentTypeValue"], "Checksum": "fdjfnfffewfwef" }, "responseJsonBody": { "actionDone": "requestBodyMockValues.action", "statusCode": "$statusCode", "statusMsg": "Debit Success", "orderId": "requestBodyMockValues.txnDetails.orderId", "consideredTxnTypes":["requestBodyMockValues.txnDetails.txnTypes[0]","requestBodyMockValues.txnDetails.txnTypes[1]"], "processedTxnType": "requestBodyMockValues.txnDetails.txnTypes[0]", "allTxnTypes":"requestBodyMockValues.txnDetails.txnTypes", "amountDetails":{ "amountDebited":"requestBodyMockValues.txnDetails.amount" }, "requestTxnDetails":"requestBodyMockValues.txnDetails", "balanceData": { "mainBalance": 1023, "buckets": { "bucket1": "$bal", "bucket2": "$bal", "bucket3": "$bal" } } } } }' > /tmp/writeTest.txt &

# api config read GET call for doing 100 api calls with 4 parallel processes
seq 1 1 | xargs -n1 -P4 curl -X GET -i 'http://localhost:8080/mockConfig?apiUrl=/api/p/wallet/debit30999' > /tmp/readTest.txt &
